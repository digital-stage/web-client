$tablet: ("min-width": 600px, "min-height": 600px);
$desktop: ("min-width": 800px, "min-height": 800px);
$breakpoints: (
        $tablet,
        $desktop
) !default;

$paddings: (4px, 8px, 16px, 24px, 32px) !default;

.block {
  display: flex;
  flex-wrap: wrap;
}

/*
.flex {
  display: flex;
}*/

.column {
  flex-direction: column;
}

/**
  ALIGNMENT
 */

.block.align-stretch {
  align-items: stretch;
}

.block.align-center {
  align-items: center;
}

.block.align-end {
  align-items: flex-end;
}

@each $breakpoint in $breakpoints {
  $index: index($breakpoints, $breakpoint);
  @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
    .block.align-stretch-#{$index} {
      align-items: stretch;
    }

    .block.align-center-#{$index} {
      align-items: center;
    }

    .block.align-end-#{$index} {
      align-items: flex-end;
    }
  }
}

/**
  JUSTIFICATION
 */
.block.justify-stretch {
  justify-content: stretch;
}

.block.justify-center {
  justify-content: center;
}

.block.justify-end {
  justify-content: flex-end;
}

@each $breakpoint in $breakpoints {
  $index: index($breakpoints, $breakpoint);
  @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
    .block.justify-stretch-#{$index} {
      justify-content: stretch;
    }

    .block.justify-center-#{$index} {
      justify-content: center;
    }

    .block.justify-end-#{$index} {
      justify-content: flex-end;
    }
  }
}

/**
PADDING
 */
@each $padding in $paddings {
  $index: index($paddings, $padding);
  .block.p-#{$index} {
    padding: $padding;
  }
  .block.pt-#{$index} {
    padding-top: $padding;
  }
  .block.pl-#{$index} {
    padding-left: $padding;
  }
  .block.pb-#{$index} {
    padding-bottom: $padding;
  }
  .block.pr-#{$index} {
    padding-right: $padding;
  }

  @each $breakpoint in $breakpoints {
    $breakpointIndex: index($breakpoints, $breakpoint);
    @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
      .block.p-#{$breakpointIndex}-#{$index} {
        padding: $padding;
      }
      .block.pt-#{$breakpointIndex}-#{$index} {
        padding-top: $padding;
      }
      .block.pl-#{$breakpointIndex}-#{$index} {
        padding-left: $padding;
      }
      .block.pb-#{$breakpointIndex}-#{$index} {
        padding-bottom: $padding;
      }
      .block.pr-#{$breakpointIndex}-#{$index} {
        padding-right: $padding;
      }
    }
  }
}


/**
  WIDTH
 */
.block.w-auto {
  flex-basis: auto;
}

.block.w-full {
  width: 100%;
}


.block.w-0 {
  display: none;
}

@for $width from 1 through 12 {
  .block.w-#{$width} {
    display: flex;
    flex-basis: $width / 12 * 100%;
  }
}

@each $breakpoint in $breakpoints {
  $index: index($breakpoints, $breakpoint);
  @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
    .block.w-#{$index}-0 {
      display: none;
    }
    @for $width from 1 through 12 {
      .block.w-#{$index}-#{$width} {
        display: flex;
        flex-basis: $width / 12 * 100%;
      }
    }
  }
}

/**
  HEIGHT
 */
.block.h-auto {
  height: auto;
}

.block.h-full {
  height: 100%;
}

@each $breakpoint in $breakpoints {
  $index: index($breakpoints, $breakpoint);
  @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
    .block.h-#{$index}-auto {
      height: auto;
    }

    .block.h-#{$index}-full {
      height: 100%;
    }
  }
}


/**
ROW
 */
.container {
  .row {
    display: flex;
    flex-wrap: wrap;
    position: relative;
    width: 100%;
  }
}

@each $padding in $paddings {
  $index: index($paddings, $padding);
  .container.p-#{$index} {
    padding-left: $padding;
    padding-right: $padding;
  }
  .row.p-#{$index} {
    margin-left: $padding*-1;
    margin-right: $padding*-1;
  }
  @each $breakpoint in $breakpoints {
    $breakpointIndex: index($breakpoints, $breakpoint);
    @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
      .row.p-#{$breakpointIndex}-#{$index} {
        margin-left: $padding*-1;
        margin-right: $padding*-1;
      }
      .container.p-#{$breakpointIndex}-#{$index} {
        padding-left: $padding;
        padding-right: $padding;
      }
    }
  }
}

/**
GROW
 */
.block.grow {
  flex-grow: 0
}

.block.grow-1 {
  flex-grow: 1
}

.block.grow-2 {
  flex-grow: 2
}

@each $breakpoint in $breakpoints {
  $index: index($breakpoints, $breakpoint);
  @media only screen and (min-width: map-get($breakpoint, "min-width")) and (min-height: map-get($breakpoint, "min-height")) {
    .block.grow-#{$index}-0 {
      flex-grow: 0
    }
    .block.grow-#{$index}-1 {
      flex-grow: 1
    }
    .block.grow-#{$index}-2 {
      flex-grow: 2
    }
  }
}
